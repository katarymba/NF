from datetime import datetime

"""complete_schema

Revision ID: 3079b57da89a
Revises: 8f3521f6344f
Create Date: 2025-05-04 22:53:50.221094

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3079b57da89a'
down_revision: Union[str, None] = '8f3521f6344f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # В данном апгрейде мы создаем полные определения всех новых таблиц,
    # которые отсутствуют в базовой миграции

    # Создание таблицы cart_items (если её нет в базовой миграции)
    op.create_table('cart_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Создание таблицы price_history (если её нет в базовой миграции)
    op.create_table('price_history',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('changed_at', sa.DateTime(), nullable=False),
                    sa.Column('changed_by_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Создание таблицы warehouses (если её нет в базовой миграции)
    op.create_table('warehouses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('address', sa.String(length=255), nullable=True),
                    sa.Column('type', sa.String(length=50), nullable=True),
                    sa.Column('capacity', sa.Integer(), nullable=True),
                    sa.Column('manager_name', sa.String(length=100), nullable=True),
                    sa.Column('phone', sa.String(length=20), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Создание таблицы stocks (если её нет в базовой миграции)
    op.create_table('stocks',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('warehouse_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Создание таблицы stock_movements (если её нет в базовой миграции)
    op.create_table('stock_movements',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('warehouse_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('movement_type', sa.String(length=50), nullable=False),
                    sa.Column('source_warehouse_id', sa.Integer(), nullable=True),
                    sa.Column('target_warehouse_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('created_by_id', sa.Integer(), nullable=True),
                    sa.Column('note', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['source_warehouse_id'], ['warehouses.id'], ),
                    sa.ForeignKeyConstraint(['target_warehouse_id'], ['warehouses.id'], ),
                    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Добавляем индексы для важных колонок в новых таблицах
    op.create_index(op.f('ix_cart_items_product_id'), 'cart_items', ['product_id'], unique=False)
    op.create_index(op.f('ix_cart_items_user_id'), 'cart_items', ['user_id'], unique=False)
    op.create_index(op.f('ix_price_history_product_id'), 'price_history', ['product_id'], unique=False)
    op.create_index(op.f('ix_stocks_product_id'), 'stocks', ['product_id'], unique=False)
    op.create_index(op.f('ix_stocks_warehouse_id'), 'stocks', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_stock_movements_product_id'), 'stock_movements', ['product_id'], unique=False)
    op.create_index(op.f('ix_stock_movements_warehouse_id'), 'stock_movements', ['warehouse_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Удаление индексов
    op.drop_index(op.f('ix_stock_movements_warehouse_id'), table_name='stock_movements')
    op.drop_index(op.f('ix_stock_movements_product_id'), table_name='stock_movements')
    op.drop_index(op.f('ix_stocks_warehouse_id'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_product_id'), table_name='stocks')
    op.drop_index(op.f('ix_price_history_product_id'), table_name='price_history')
    op.drop_index(op.f('ix_cart_items_user_id'), table_name='cart_items')
    op.drop_index(op.f('ix_cart_items_product_id'), table_name='cart_items')

    # Удаление таблиц
    op.drop_table('stock_movements')
    op.drop_table('stocks')
    op.drop_table('warehouses')
    op.drop_table('price_history')
    op.drop_table('cart_items')

    # ### end Alembic commands ###