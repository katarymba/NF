from sqlalchemy import create_engine, text
import urllib.parse
from datetime import datetime

# URL encode the password to handle special characters
password = urllib.parse.quote_plus('%KM041286)zz!')
DATABASE_URL = f"postgresql://northf_user:{password}@northfish-db:5432/north_fish"

# Create engine
engine = create_engine(DATABASE_URL)

# Define category data - matches actual schema
categories = [
    (1, "Консервы", "Рыбные консервы разных видов"),
    (2, "Икра", "Икра различных видов рыб"),
    (3, "Деликатесы", "Рыбные деликатесы премиум-класса"),
    (4, "Свежая рыба", "Свежая охлажденная рыба"),
    (5, "Замороженная рыба", "Свежемороженая рыба различных видов"),
    (6, "Морепродукты", "Различные виды морепродуктов"),
    (7, "Полуфабрикаты", "Рыбные полуфабрикаты готовые к приготовлению"),
    (8, "Копчёная рыба", "Рыба холодного и горячего копчения")
]

# Define category mapping for products
category_mapping = {
    "canned": 1,
    "caviar": 2,
    "delicacies": 3,
    "fresh_fish": 4,
    "frozen_fish": 5,
    "seafood": 6,
    "semi_finished": 7,
    "smoked": 8
}


# Function to seed categories
def seed_categories():
    with engine.connect() as connection:
        with connection.begin():
            # Truncate categories table
            connection.execute(text("TRUNCATE TABLE categories RESTART IDENTITY CASCADE;"))

            # Add categories
            now = "2025-05-18 13:12:27"  # Using provided timestamp
            for cat_id, name, description in categories:
                connection.execute(
                    text("""
                    INSERT INTO categories (id, name, description, created_at)
                    VALUES (:id, :name, :description, :created_at)
                    """),
                    {"id": cat_id, "name": name, "description": description, "created_at": now}
                )

            print(f"Added {len(categories)} categories")


# Function to seed warehouses
def seed_warehouses():
    warehouses = [
        (1, 'ООО "Север-Рыба" Центральный склад', 'г. Шулма, ул. Портовая, 15', 'WAREHOUSE', 10000,
         'Иванов Сергей Петрович', '+7(921)123-45-67', '2025-05-07 17:01:28'),
        (2, 'Оптовый склад', 'г. Череповец, ул. Гоголя, 88', 'WAREHOUSE', 8000, 'Петрова Елена Николаевна',
         '+7(921)234-56-78', '2025-05-07 17:01:28'),
        (3, 'Север-Рыба Устюженская', 'г. Череповец, ул. Устюженская, 8', 'STORE', 500, 'Смирнова Ольга Владимировна',
         '+7(921)345-67-89', '2025-05-07 17:01:28'),
        (4, 'Север-Рыба Горького', 'г. Череповец, ул. Максима Горького, 30', 'STORE', 450, 'Козлов Дмитрий Иванович',
         '+7(921)456-78-90', '2025-05-07 17:01:28'),
        (5, 'Север-Рыба Ленинградская', 'г. Череповец, ул. Ленинградская, 16', 'STORE', 400, 'Николаева Анна Сергеевна',
         '+7(921)567-89-01', '2025-05-07 17:01:28'),
        (6, 'Север-Рыба Октябрьский', 'г. Череповец, Октябрьский проспект, 49', 'STORE', 550,
         'Васильев Игорь Александрович', '+7(921)678-90-12', '2025-05-07 17:01:28'),
        (7, 'Север-Рыба Победы', 'г. Череповец, Проспект Победы, 107', 'STORE', 480, 'Федорова Мария Алексеевна',
         '+7(921)789-01-23', '2025-05-07 17:01:28'),
        (8, 'Север-Рыба Пионерская', 'г. Череповец, ул. Пионерская, 21', 'STORE', 420, 'Алексеев Павел Дмитриевич',
         '+7(921)890-12-34', '2025-05-07 17:01:28'),
        (
        9, 'Север-Рыба Белинского', 'г. Череповец, ул. Белинского, 1/3 к2', 'STORE', 470, 'Морозова Екатерина Игоревна',
        '+7(921)901-23-45', '2025-05-07 17:01:28'),
        (10, 'Север-Рыба Краснодонцев', 'г. Череповец, ул. Краснодонцев, 110', 'STORE', 510, 'Соколов Артем Викторович',
         '+7(921)012-34-56', '2025-05-07 17:01:28'),
        (11, 'Север-Рыба Беляева', 'г. Череповец, ул. Космонавта Беляева, 29', 'STORE', 490,
         'Лебедева Наталья Дмитриевна', '+7(921)123-45-67', '2025-05-07 17:01:28')
    ]

    with engine.connect() as connection:
        with connection.begin():
            try:
                # Truncate warehouses table
                connection.execute(text("TRUNCATE TABLE warehouses RESTART IDENTITY CASCADE;"))

                # Add warehouses - use direct SQL without type casting
                for warehouse_id, name, address, warehouse_type, capacity, manager_name, phone, created_at in warehouses:
                    # Direct SQL without parameterized type
                    sql = f"""
                    INSERT INTO warehouses (id, name, address, type, capacity, manager_name, phone, created_at)
                    VALUES ({warehouse_id}, '{name.replace("'", "''")}', '{address}', '{warehouse_type}', 
                            {capacity}, '{manager_name}', '{phone}', '{created_at}')
                    """
                    connection.execute(text(sql))

                print(f"Added {len(warehouses)} warehouses")
            except Exception as e:
                print(f"Warning: Could not add warehouses: {e}")


# Function to seed products
def seed_products():
    products = [
    ("Набор «ПАТРИОТ»", 1999, None, "delicacies",
     "Эксклюзивный набор деликатесов ПАТРИОТ создан для настоящих ценителей морепродуктов. В его состав входят отборные образцы лучших рыбных деликатесов, приготовленных по традиционным рецептам севера России."),
    ("Навага-ЛЕДЯНАЯ", 199.99, "1 кг", "frozen_fish",
     "Ледяная навага, выловленная в чистых водах северных морей, отличается особой нежностью мяса и изысканным вкусом. Мясо наваги содержит множество полезных микроэлементов, включая йод, фосфор и витамины группы B."),
    ("Котлета 'Царская' из СОМА", 599.99, None, "semi_finished",
     "Изысканная котлета Царская из мяса сома настоящий кулинарный шедевр для гурманов. Приготовлена из отборного филе речного сома с добавлением секретной смеси специй по старинному рецепту. Мясо сома отличается особой нежностью и сочностью, а натуральные ингредиенты подчеркивают его вкус."),
    ("ХРЕБТЫ ФОРЕЛИ Г/К", 899.99, "1 кг", "smoked",
     "Хребты форели горячего копчения - настоящее лакомство для ценителей рыбных деликатесов. Приготовлены по традиционной технологии с использованием натуральной древесной щепы."),
    ("ФОРЕЛЬ ТУШКА Х/К", 2789, "1 кг", "smoked",
     "Форель холодного копчения - изысканный деликатес с нежным, слегка сладковатым вкусом и тонким ароматом копчения."),
    ("ФИЛЕ МАСЛЯНОЙ КУСОК Х/К", 2289, "1 кг", "smoked",
     "Филе масляной рыбы холодного копчения отличается мягкой текстурой и богатым, насыщенным вкусом."),
    ("СОМ Г/К КУСОК", 1089, "1 кг", "smoked",
     "Сом горячего копчения - сочное и ароматное мясо с характерным дымным ароматом."),
    ("СЁМГА С/С в/у пласт", 3599.99, "1 кг", "fresh_fish",
     "Слабосоленая сёмга в вакуумной упаковке - нежнейший продукт премиум-класса с изысканным вкусом и богатым составом полезных веществ."),
    ("СЕЛЬДЬ ОЛЮТОРСКАЯ", 399, "1 кг", "frozen_fish",
     "Олюторская сельдь - один из лучших видов дальневосточной сельди, отличающийся высоким содержанием жира и особым вкусом."),
    ("СЕЛЬДЬ ФИЛЕ КУСОЧКИ ПО-ФРАНЦУЗСКИ", 349, "450 г", "delicacies",
     "Нежное филе сельди в ароматной заливке с добавлением трав и специй по французскому рецепту."),
    ("МОЙВА Г/К нп сг", 969.99, "1 кг", "smoked",
     "Мойва горячего копчения - доступная и вкусная закуска с насыщенным ароматом копчения."),
    ("МИНТАЙ с/м", 269.99, "1 кг", "frozen_fish",
     "Свежемороженый минтай - диетическая рыба с низким содержанием жира и высоким содержанием белка."),
    ("ЗУБАТКА Г/К кусок", 1399.99, "1 кг", "smoked",
     "Кусок зубатки горячего копчения - деликатес с плотной текстурой и выраженным вкусом."),
    ("ЖЕРЕХ Х/К ПЛАСТ п бг", 989, "1 кг", "smoked",
     "Пласт жереха холодного копчения - отличный выбор для гурманов, ценящих изысканные рыбные деликатесы."),
    ("ГОРБУША Х/К п юг", 1099.99, "1 кг", "smoked",
     "Пласт горбуши холодного копчения - традиционный продукт с нежным вкусом и ароматом."),
    ("ЯЗЫК ТРЕСКИ ст.б", 390, "200 г", "delicacies",
     "Язык трески в стеклянной банке - редкий деликатес, богатый полезными веществами."),
    ("ТУНЕЦ НАТУРАЛЬНЫЙ ст.б", 698, "500 г", "canned",
     "Натуральный тунец в собственном соку - отличный источник белка и омега-3 жирных кислот."),
    ("ПЕЧЕНЬ ТРЕСКИ ПО-МУРМАНСКИ ж.б", 499, "190 г", "canned",
     "Печень трески по-мурмански - традиционный северный деликатес с богатым составом полезных веществ."),
    ("ПЕЧЕНЬ ТРЕСКИ НАТУРАЛЬНАЯ ст.б", 998, "500 г", "canned",
     "Натуральная печень трески - продукт премиум-класса, приготовленный по классической технологии."),
    ("ИКРА ТРЕСКИ АТЛ", 199.99, "160 г", "caviar",
     "Икра трески атлантической - доступный и питательный продукт с приятным вкусом."),
    ("ИКРА КИЖУЧА с/с", 14999, "1 кг", "caviar",
     "Слабосоленая икра кижуча - деликатес высшего качества с ярким вкусом и ароматом."),
    ("ИКРА КЕТЫ с/с", 13999, "1 кг", "caviar",
     "Слабосоленая икра кеты - классический деликатес, богатый белком и полезными микроэлементами."),
    ("ФОРЕЛЬ С/С в/у пласт", 2789, "1 кг", "fresh_fish",
     "Слабосоленая форель в вакуумной упаковке - нежный продукт с изысканным вкусом."),
    ("ФОРЕЛЬ КАРЕЛЬСКАЯ, ОХЛАЖДЕННАЯ", 887, "1 кг", "fresh_fish",
     "Охлажденная карельская форель - свежая рыба высшего качества из экологически чистых водоемов Карелии."),
    ("СТЕЙК ФОРЕЛИ", 1790, None, "fresh_fish",
     "Стейк форели - сочный кусок рыбы идеальной толщины для запекания или жарки."),
    ("СТЕЙК СЁМГИ", 2150, None, "fresh_fish",
     "Стейк сёмги - премиальный продукт для приготовления изысканных блюд."),
    ("ФАЛАНГИ КАМЧАТСКОГО КРАБА", 5900, None, "seafood",
     "Фаланги камчатского краба - деликатес с нежным, сладковатым мясом."),
    ("ЛАНГУСТИНЫ без головы", 1640, "1 кг", "seafood",
     "Лангустины без головы - изысканный морепродукт с нежным мясом и сладковатым вкусом."),
    ("СКУМБРИЯ КОРОЛЕВСКАЯ Х/К", 1099, "1 кг", "smoked",
     "Королевская скумбрия холодного копчения - продукт с ярким вкусом и насыщенным ароматом."),
    ("ВОБЛА ВЯЛЕНАЯ", 1390, "1 кг", "smoked", "Вяленая вобла - традиционная закуска с характерным вкусом."),
    ("СУДАК ВЯЛЕНЫЙ", 519, "1 кг", "smoked", "Вяленый судак - деликатес с плотной структурой и насыщенным вкусом."),
    ("ПАЛТУС охлажденный или с/м", 1790, "1 кг", "fresh_fish",
     "Палтус охлажденный или свежемороженый - диетическая рыба с нежным мясом."),
    ("ТРЕСКА С/М", 579, "1 кг", "frozen_fish",
     "Свежемороженая треска - диетический продукт, богатый белком и полезными микроэлементами."),
    ("ОКУНЬ МОРСКОЙ С/М", 549, "1 кг", "frozen_fish",
     "Свежемороженый морской окунь - рыба с нежным мясом и отличными вкусовыми качествами."),
    ("СКУМБРИЯ косичка Х/К", 165, "300 г", "smoked",
     "Скумбрия косичка холодного копчения - удобный формат для подачи и употребления."),
    ("ГОРБУША косичка х/к", 249, "300 г", "smoked",
     "Горбуша косичка холодного копчения - традиционный продукт с насыщенным вкусом."),
    ("ТРЕСКА филе-кусочки в масле", 239, "200 г", "canned",
     "Филе-кусочки трески в масле - готовый к употреблению продукт высокого качества."),
    ("Ассорти горбуша/сельдь", 112, "180 г", "canned",
     "Ассорти из горбуши и сельди - разнообразие вкусов в одной банке."),
    ("Трио горбуша/сельдь/скумбрия", 105, "180 г", "canned",
     "Трио из горбуши, сельди и скумбрии - идеальный выбор для разнообразия вкусов."),
    ("СЕЛЬДЬ в масле", 179, "350 г", "canned", "Сельдь в масле - классический продукт с мягким вкусом."),
    ("СЕЛЬДЬ АТЛ. В МАСЛЕ ст.б", 349, "450 г", "canned",
     "Атлантическая сельдь в масле - продукт премиум-класса в стеклянной банке."),
    ("СТЕЙК ЗУБАТКИ (синей) С/М", 289, "1 кг", "frozen_fish",
     "Стейк синей зубатки свежемороженый - продукт для приготовления разнообразных блюд."),
    ("СТЕЙК ТРЕСКИ С/М", 590, "1 кг", "frozen_fish",
     "Стейк трески свежемороженый - натуральный продукт для приготовления полезных и вкусных блюд."),
    ("ФИЛЕ МИНТАЯ с/м", 419, "1 кг", "frozen_fish",
     "Свежемороженое филе минтая - диетический продукт без костей, готовый к приготовлению."),
    ("ФИЛЕ ТРЕСКИ с/м на коже", 579, "1 кг", "frozen_fish",
     "Свежемороженое филе трески на коже - натуральный продукт высокого качества."),
    ("Филе ТРЕСКИ кубики", 589, "1 кг", "frozen_fish",
     "Кубики филе трески - удобный формат для приготовления различных блюд."),
    ("Филе ПАЛТУСА с/м", 599, "1 кг", "frozen_fish",
     "Свежемороженое филе палтуса - диетический продукт с нежным вкусом."),
    ("ОСЁТР сибирский", 1699, "1 кг", "fresh_fish",
     "Сибирский осётр - редкая деликатесная рыба с особыми вкусовыми качествами."),
    ("Икра СТЕРЛЯДИ 50г с/с", 3900, "50 г", "caviar",
     "Слабосоленая икра стерляди - редкий деликатес премиум-класса."),
    ("Икра Сибирского осетра 57г с/с", 3990, "57 г", "caviar",
     "Слабосоленая икра сибирского осетра - изысканный деликатес с неповторимым вкусом."),
    ("Икра СТЕРЛЯДИ 100г с/с", 7800, "100 г", "caviar",
     "Слабосоленая икра стерляди - редкий деликатес премиум-класса."),
    ("Икра Сибирского осетра 113г с/с", 8490, "113 г", "caviar",
     "Слабосоленая икра сибирского осетра - изысканный деликатес с неповторимым вкусом."),
    ("Икра Сибирского осетра 125г с/с", 9500, "125 г", "caviar",
     "Слабосоленая икра сибирского осетра - изысканный деликатес с неповторимым вкусом."),
    ("Икра Сибирского осетра 500г с/с", 35000, "500 г", "caviar",
     "Слабосоленая икра сибирского осетра - изысканный деликатес с неповторимым вкусом."),
    ("Щепа Яблони", 95, None, "delicacies", "Щепа яблони для копчения рыбы - придает нежный фруктовый аромат."),
    ("Щепа Ольхи", 75, None, "delicacies",
     "Щепа ольхи для копчения рыбы - классический вариант для создания традиционного аромата."),
    ("Щепа Груши", 95, None, "delicacies", "Щепа груши для копчения рыбы - придает легкий сладковатый аромат."),
    ("Щепа Вишни", 95, None, "delicacies", "Щепа вишни для копчения рыбы - придает насыщенный фруктовый аромат."),
    ("Щепа Бука", 95, None, "delicacies", "Щепа бука для копчения рыбы - придает изысканный аромат."),
    ("МОРСИК 0,3л, 0.5л, 1л", 49, None, "delicacies", "Морсик - освежающий напиток на основе натуральных ягод."),
    ]

    with engine.connect() as connection:
        with connection.begin():
            # Truncate products table
            connection.execute(text("TRUNCATE TABLE products RESTART IDENTITY CASCADE;"))

            # Add products
            now = "2025-05-18 13:12:27"  # Using provided timestamp
            added_count = 0

            for i, product in enumerate(products, 1):
                name, price, weight, category_slug, description = product
                category_id = category_mapping.get(category_slug)

                # Skip products with invalid category
                if not category_id:
                    print(f"Skipping product {name} - category {category_slug} not found")
                    continue

                # Image path
                image_path = f"/images/products/{i}.jpg" if i <= 60 else None

                # Prepare SQL statement with proper escaping for string values
                sql = f"""
                INSERT INTO products (name, description, price, weight, category_id, stock_quantity, created_at, image_url)
                VALUES ('{name.replace("'", "''")}', '{description.replace("'", "''")}', {price}, 
                        {f"'{weight}'" if weight else 'NULL'}, {category_id}, 10, '{now}', 
                        {f"'{image_path}'" if image_path else 'NULL'})
                """

                connection.execute(text(sql))
                added_count += 1

            print(f"Added {added_count} products to the database")


# Main execution
try:
    # Seed each type of data separately to avoid transaction failures affecting other parts
    seed_categories()
    seed_warehouses()
    seed_products()

    print("Database seeded successfully!")
    print(f"Current date and time: 2025-05-18 13:12:27")
    print(f"Script executed by: katarymba")
except Exception as e:
    print(f"Error: {e}")